INFO: - save into dir: ./output/%s/2021-03-03T09:15:39.140068
INFO: - {'DATASETS': {'COMPLETION3D': {'CATEGORY_FILE_PATH': './datasets/Completion3D.json', 'PARTIAL_POINTS_PATH': '/home/v-chulx/code/completion3d/data/shapenet/%s/partial/%s/%s.h5', 'COMPLETE_POINTS_PATH': '/home/v-chulx/code/completion3d/data/shapenet/%s/gt/%s/%s.h5'}, 'SHAPENET': {'CATEGORY_FILE_PATH': './datasets/ShapeNet.json', 'N_RENDERINGS': 8, 'N_POINTS': 16384, 'VERSION': 'GRnet', 'PARTIAL_POINTS_PATH': '/home/v-chulx/code/Datasets/ShapeNetCompletion/%s/partial/%s/%s/%02d.pcd', 'COMPLETE_POINTS_PATH': '/home/v-chulx/code/Datasets/ShapeNetCompletion/%s/complete/%s/%s.pcd'}, 'KITTI': {'CATEGORY_FILE_PATH': './datasets/KITTI.json', 'PARTIAL_POINTS_PATH': '/home/haya/LocalBlob/others/v-chuxwa/KITTI/cars/%s.pcd', 'BOUNDING_BOX_FILE_PATH': '/home/haya/LocalBlob/others/v-chuxwa/KITTI/bboxes/%s.txt'}}, 'DATASET': {'TRAIN_DATASET': 'ShapeNet', 'TEST_DATASET': 'ShapeNet', 'N_OUTPOINTS': 16384, 'NUM_CLASSES': 0}, 'CONST': {'DEVICE': '5', 'NUM_WORKERS': 32, 'N_INPUT_POINTS': 2048, 'WEIGHTS': '/home/v-chuxwa/chuxwa/completion.pytorch/output/checkpoints/notrain/ckpt-epoch-001.pth'}, 'DIR': {'OUT_PATH': './output/', 'IN_PATH': './output/checkpoints', 'CHECKPOINTS': './output/checkpoints/2021-03-03T09:15:39.140068', 'LOGS': './output/logs/2021-03-03T09:15:39.140068'}, 'NETWORK': {'N_SAMPLING_POINTS': 2048, 'GRIDDING_LOSS_SCALES': [128, 64], 'GRIDDING_LOSS_ALPHAS': [0.1, 0.01], 'N_PRIMITIVES': 32, 'USE_ADAIN': 'share', 'USE_SELAYER': True, 'CONSIST_LOSS': False, 'MODEL_TYPE': 'MVNet', 'USE_CONSIST_LOSS': True, 'METRIC': 'emd'}, 'APEX': {'FLAG': False, 'LEVEL': 'O1'}, 'RENDER': {'IMG_SIZE': 256, 'RADIUS_LIST': [5.0, 7.0, 10.0], 'PROJECTION': 'orthorgonal', 'EYEPOS': 1.0, 'N_VIEWS': 8}, 'GAN': {'USE_IM': True, 'USE_FM': True, 'USE_rGAN': False, 'USE_cGAN': True, 'WEIGHT_IM': 1, 'WEIGHT_FM': 1, 'WEIGHT_L2': 200, 'WEIGHT_GAN': 1.0}, 'TRAIN': {'BATCH_SIZE': 16, 'N_EPOCHS': 150, 'SAVE_FREQ': 1, 'LOG_FREQ': 1, 'LEARNING_RATE': 0.0001, 'LR_MILESTONES': [1000], 'GAMMA': 0.5, 'BETAS': [0.0, 0.9], 'WEIGHT_DECAY': 0}, 'TEST': {'METRIC_NAME': 'ChamferDistance'}, 'FIND': False, 'ISGRU': False, 'Encode': 'Residualnet', 'renderfeat': False, 'use_attention': False, 'iters': 1, 'gamma_mode': 'none', 'inpaint': 0.0, 'add_all_loss': False, 'cd_weight': 0.0, 'ema': True, 'N_OUTPOINTS': 16384}
DEBUG: - Creating converter from 7 to 5
DEBUG: - Creating converter from 5 to 7
DEBUG: - Creating converter from 7 to 5
DEBUG: - Creating converter from 5 to 7
DEBUG: - CACHEDIR=/home/v-chuxwa/.cache/matplotlib
DEBUG: - Using fontManager instance from /home/v-chuxwa/.cache/matplotlib/fontlist-v330.json
DEBUG: - Loaded backend agg version unknown.
INFO: - Collecting files of Taxonomy [ID=02691156, Name=airplane]
INFO: - Collecting files of Taxonomy [ID=02933112, Name=cabinet]
INFO: - Collecting files of Taxonomy [ID=02958343, Name=car]
INFO: - Collecting files of Taxonomy [ID=03001627, Name=chair]
INFO: - Collecting files of Taxonomy [ID=03636649, Name=lamp]
INFO: - Collecting files of Taxonomy [ID=04256520, Name=sofa]
INFO: - Collecting files of Taxonomy [ID=04379243, Name=table]
INFO: - Collecting files of Taxonomy [ID=04530566, Name=watercraft]
INFO: - Complete collecting files of the dataset. Total files: 1200
DEBUG: - update config NUM_CLASSES: 8.
INFO: - MVNet(
  (expansion): expansionPenaltyModule()
  (encoder): PointEncoder(
    (feat_extractor): EdgeConvResFeat(
      (conv1): Conv2d(6, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv2): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv4): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv5): Conv1d(2048, 2048, kernel_size=(1,), stride=(1,), bias=False)
      (relu1): LeakyReLU(negative_slope=0.2)
      (relu2): LeakyReLU(negative_slope=0.2)
      (relu3): LeakyReLU(negative_slope=0.2)
      (relu4): LeakyReLU(negative_slope=0.2)
      (relu5): LeakyReLU(negative_slope=0.2)
      (se1): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=256, out_features=16, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=16, out_features=256, bias=False)
          (3): Sigmoid()
        )
      )
      (se2): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=256, out_features=16, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=16, out_features=256, bias=False)
          (3): Sigmoid()
        )
      )
      (se3): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=512, out_features=32, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=32, out_features=512, bias=False)
          (3): Sigmoid()
        )
      )
      (se4): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=1024, out_features=64, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=64, out_features=1024, bias=False)
          (3): Sigmoid()
        )
      )
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn4): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn5): BatchNorm1d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (resconv1): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
      (resconv2): Conv1d(256, 512, kernel_size=(1,), stride=(1,), bias=False)
      (resconv3): Conv1d(512, 1024, kernel_size=(1,), stride=(1,), bias=False)
    )
    (linear): Linear(in_features=4096, out_features=4096, bias=True)
    (bn): BatchNorm1d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
  )
  (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))
  (decoder): ModuleList(
    (0): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (1): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (2): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (3): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (4): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (5): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (6): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (7): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (8): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (9): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (10): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (11): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (12): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (13): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (14): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (15): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (16): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (17): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (18): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (19): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (20): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (21): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (22): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (23): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (24): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (25): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (26): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (27): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (28): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (29): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (30): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
    (31): NewAdaInPointGenCon(
      (dec): GridDecoder(
        (conv1): Conv1d(2, 1026, kernel_size=(1,), stride=(1,))
        (conv2): Conv1d(1026, 513, kernel_size=(1,), stride=(1,))
        (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
        (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        (th): Tanh()
        (adain1): AdaptiveInstanceNorm1d(1026)
        (adain2): AdaptiveInstanceNorm1d(513)
        (adain3): AdaptiveInstanceNorm1d(256)
        (bn1): BatchNorm1d(1026, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (bn3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se1): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=1026, out_features=64, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1026, bias=False)
            (3): Sigmoid()
          )
        )
        (se2): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=513, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=513, bias=False)
            (3): Sigmoid()
          )
        )
        (se3): SELayer1D(
          (avg_pool): AdaptiveAvgPool1d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
      )
    )
  )
  (mlp): Sequential(
    (0): Linear(in_features=4096, out_features=4096, bias=True)
    (1): ReLU()
    (2): Linear(in_features=4096, out_features=3590, bias=True)
  )
  (res): PointNetRes(
    (conv1): Conv1d(4, 64, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))
    (conv4): Conv1d(1088, 512, kernel_size=(1,), stride=(1,))
    (conv5): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    (conv6): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (conv7): Conv1d(128, 3, kernel_size=(1,), stride=(1,))
    (se1): SELayer1D(
      (avg_pool): AdaptiveAvgPool1d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=64, out_features=4, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=4, out_features=64, bias=False)
        (3): Sigmoid()
      )
    )
    (se2): SELayer1D(
      (avg_pool): AdaptiveAvgPool1d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=128, out_features=8, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=8, out_features=128, bias=False)
        (3): Sigmoid()
      )
    )
    (se4): SELayer1D(
      (avg_pool): AdaptiveAvgPool1d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=512, out_features=32, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=32, out_features=512, bias=False)
        (3): Sigmoid()
      )
    )
    (se5): SELayer1D(
      (avg_pool): AdaptiveAvgPool1d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=256, out_features=16, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=16, out_features=256, bias=False)
        (3): Sigmoid()
      )
    )
    (se6): SELayer1D(
      (avg_pool): AdaptiveAvgPool1d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=128, out_features=8, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=8, out_features=128, bias=False)
        (3): Sigmoid()
      )
    )
    (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn6): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn7): BatchNorm1d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (th): Tanh()
  )
)
